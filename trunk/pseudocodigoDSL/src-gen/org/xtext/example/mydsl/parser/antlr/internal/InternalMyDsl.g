/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Codigo";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCodigo
entryRuleCodigo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodigoRule()); }
	 iv_ruleCodigo=ruleCodigo 
	 { $current=$iv_ruleCodigo.current; } 
	 EOF 
;

// Rule Codigo
ruleCodigo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getComentariosComentarioParserRuleCall_0_0_0()); 
	    }
		lv_comentarios_0_0=ruleComentario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"comentarios",
        		lv_comentarios_0_0, 
        		"Comentario");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getComentariosComentarioParserRuleCall_0_1_0()); 
	    }
		lv_comentarios_1_0=ruleComentario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"comentarios",
        		lv_comentarios_1_0, 
        		"Comentario");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_2='const' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCodigoAccess().getConstKeyword_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getConstantesConstantesParserRuleCall_1_1_0_0()); 
	    }
		lv_constantes_3_0=ruleConstantes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"constantes",
        		lv_constantes_3_0, 
        		"Constantes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getConstantesConstantesParserRuleCall_1_1_1_0()); 
	    }
		lv_constantes_4_0=ruleConstantes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"constantes",
        		lv_constantes_4_0, 
        		"Constantes");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)?(	otherlv_5='tipo' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCodigoAccess().getTipoKeyword_2_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getTipocomplejoTipoComplejoParserRuleCall_2_1_0_0()); 
	    }
		lv_tipocomplejo_6_0=ruleTipoComplejo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"tipocomplejo",
        		lv_tipocomplejo_6_0, 
        		"TipoComplejo");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getTipocomplejoTipoComplejoParserRuleCall_2_1_1_0()); 
	    }
		lv_tipocomplejo_7_0=ruleTipoComplejo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"tipocomplejo",
        		lv_tipocomplejo_7_0, 
        		"TipoComplejo");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)?((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getFuncionSubprocesoParserRuleCall_3_0_0()); 
	    }
		lv_funcion_8_0=ruleSubproceso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"funcion",
        		lv_funcion_8_0, 
        		"Subproceso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getFuncionSubprocesoParserRuleCall_3_1_0()); 
	    }
		lv_funcion_9_0=ruleSubproceso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"funcion",
        		lv_funcion_9_0, 
        		"Subproceso");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getTieneInicioParserRuleCall_4_0()); 
	    }
		lv_tiene_10_0=ruleInicio		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		set(
       			$current, 
       			"tiene",
        		lv_tiene_10_0, 
        		"Inicio");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleComentario
entryRuleComentario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComentarioRule()); }
	 iv_ruleComentario=ruleComentario 
	 { $current=$iv_ruleComentario.current; } 
	 EOF 
;

// Rule Comentario
ruleComentario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='//' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComentarioAccess().getSolidusSolidusKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComentarioAccess().getMensajeEStringParserRuleCall_1_0()); 
	    }
		lv_mensaje_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComentarioRule());
	        }
       		set(
       			$current, 
       			"mensaje",
        		lv_mensaje_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTipoComplejo
entryRuleTipoComplejo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoComplejoRule()); }
	 iv_ruleTipoComplejo=ruleTipoComplejo 
	 { $current=$iv_ruleTipoComplejo.current; } 
	 EOF 
;

// Rule TipoComplejo
ruleTipoComplejo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getVectorParserRuleCall_0()); 
    }
    this_Vector_0=ruleVector
    { 
        $current = $this_Vector_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getMatrizParserRuleCall_1()); 
    }
    this_Matriz_1=ruleMatriz
    { 
        $current = $this_Matriz_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getRegistroParserRuleCall_2()); 
    }
    this_Registro_2=ruleRegistro
    { 
        $current = $this_Registro_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getArchivoParserRuleCall_3()); 
    }
    this_Archivo_3=ruleArchivo
    { 
        $current = $this_Archivo_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getEnumeradoParserRuleCall_4()); 
    }
    this_Enumerado_4=ruleEnumerado
    { 
        $current = $this_Enumerado_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoComplejoAccess().getSubrangoParserRuleCall_5()); 
    }
    this_Subrango_5=ruleSubrango
    { 
        $current = $this_Subrango_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubproceso
entryRuleSubproceso returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubprocesoRule()); }
	 iv_ruleSubproceso=ruleSubproceso 
	 { $current=$iv_ruleSubproceso.current; } 
	 EOF 
;

// Rule Subproceso
ruleSubproceso returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubprocesoAccess().getFuncionParserRuleCall_0()); 
    }
    this_Funcion_0=ruleFuncion
    { 
        $current = $this_Funcion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubprocesoAccess().getProcedimientoParserRuleCall_1()); 
    }
    this_Procedimiento_1=ruleProcedimiento
    { 
        $current = $this_Procedimiento_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSentencias
entryRuleSentencias returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenciasRule()); }
	 iv_ruleSentencias=ruleSentencias 
	 { $current=$iv_ruleSentencias.current; } 
	 EOF 
;

// Rule Sentencias
ruleSentencias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getLlamadaFuncionParserRuleCall_0()); 
    }
    this_LlamadaFuncion_0=ruleLlamadaFuncion
    { 
        $current = $this_LlamadaFuncion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getAsignacionParserRuleCall_1()); 
    }
    this_Asignacion_1=ruleAsignacion
    { 
        $current = $this_Asignacion_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getEscribirParserRuleCall_2()); 
    }
    this_Escribir_2=ruleEscribir
    { 
        $current = $this_Escribir_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getLeerParserRuleCall_3()); 
    }
    this_Leer_3=ruleLeer
    { 
        $current = $this_Leer_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getIncrementoParserRuleCall_4()); 
    }
    this_incremento_4=ruleincremento
    { 
        $current = $this_incremento_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getBloqueParserRuleCall_5()); 
    }
    this_Bloque_5=ruleBloque
    { 
        $current = $this_Bloque_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getValorComplejoParserRuleCall_6()); 
    }
    this_ValorComplejo_6=ruleValorComplejo
    { 
        $current = $this_ValorComplejo_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getFuncionFicheroAbrirParserRuleCall_7()); 
    }
    this_FuncionFicheroAbrir_7=ruleFuncionFicheroAbrir
    { 
        $current = $this_FuncionFicheroAbrir_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getFuncionFicheroCerrarParserRuleCall_8()); 
    }
    this_FuncionFicheroCerrar_8=ruleFuncionFicheroCerrar
    { 
        $current = $this_FuncionFicheroCerrar_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBloque
entryRuleBloque returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBloqueRule()); }
	 iv_ruleBloque=ruleBloque 
	 { $current=$iv_ruleBloque.current; } 
	 EOF 
;

// Rule Bloque
ruleBloque returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getSiParserRuleCall_0()); 
    }
    this_Si_0=ruleSi
    { 
        $current = $this_Si_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getMientrasParserRuleCall_1()); 
    }
    this_mientras_1=rulemientras
    { 
        $current = $this_mientras_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getRepetirParserRuleCall_2()); 
    }
    this_repetir_2=rulerepetir
    { 
        $current = $this_repetir_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getDesdeParserRuleCall_3()); 
    }
    this_desde_3=ruledesde
    { 
        $current = $this_desde_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBloqueAccess().getSegunParserRuleCall_4()); 
    }
    this_segun_4=rulesegun
    { 
        $current = $this_segun_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDeclaracion
entryRuleDeclaracion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaracionRule()); }
	 iv_ruleDeclaracion=ruleDeclaracion 
	 { $current=$iv_ruleDeclaracion.current; } 
	 EOF 
;

// Rule Declaracion
ruleDeclaracion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDeclaracionAccess().getDeclaracionVariableParserRuleCall_0()); 
    }
    this_DeclaracionVariable_0=ruleDeclaracionVariable
    { 
        $current = $this_DeclaracionVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeclaracionAccess().getDeclaracionPropiaParserRuleCall_1()); 
    }
    this_DeclaracionPropia_1=ruleDeclaracionPropia
    { 
        $current = $this_DeclaracionPropia_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInternas
entryRuleInternas returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternasRule()); }
	 iv_ruleInternas=ruleInternas 
	 { $current=$iv_ruleInternas.current; } 
	 EOF 
;

// Rule Internas
ruleInternas returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInternasAccess().getNombreNombreInternaParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleNombreInterna		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternasRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"NombreInterna");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInternasAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInternasAccess().getOperadorOperadorParserRuleCall_2_0_0()); 
	    }
		lv_operador_2_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternasRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInternasAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternasAccess().getOperadorOperadorParserRuleCall_2_1_1_0()); 
	    }
		lv_operador_4_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternasRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_4_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInternasAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleFuncionFicheroAbrir
entryRuleFuncionFicheroAbrir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionFicheroAbrirRule()); }
	 iv_ruleFuncionFicheroAbrir=ruleFuncionFicheroAbrir 
	 { $current=$iv_ruleFuncionFicheroAbrir.current; } 
	 EOF 
;

// Rule FuncionFicheroAbrir
ruleFuncionFicheroAbrir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='abrir' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuncionFicheroAbrirAccess().getAbrirKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuncionFicheroAbrirAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroAbrirAccess().getVariableVariableIDParserRuleCall_2_0_0()); 
	    }
		lv_variable_2_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroAbrirRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuncionFicheroAbrirAccess().getCommaKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroAbrirAccess().getModoModoAperturaParserRuleCall_2_2_0()); 
	    }
		lv_modo_4_0=ruleModoApertura		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroAbrirRule());
	        }
       		set(
       			$current, 
       			"modo",
        		lv_modo_4_0, 
        		"ModoApertura");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuncionFicheroAbrirAccess().getCommaKeyword_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroAbrirAccess().getVariableOperadorParserRuleCall_2_4_0()); 
	    }
		lv_variable_6_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroAbrirRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_6_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuncionFicheroAbrirAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleFuncionFicheroCerrar
entryRuleFuncionFicheroCerrar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionFicheroCerrarRule()); }
	 iv_ruleFuncionFicheroCerrar=ruleFuncionFicheroCerrar 
	 { $current=$iv_ruleFuncionFicheroCerrar.current; } 
	 EOF 
;

// Rule FuncionFicheroCerrar
ruleFuncionFicheroCerrar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cerrar' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuncionFicheroCerrarAccess().getCerrarKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuncionFicheroCerrarAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionFicheroCerrarAccess().getVariableVariableIDParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionFicheroCerrarRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuncionFicheroCerrarAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleModoApertura
entryRuleModoApertura returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getModoAperturaRule()); } 
	 iv_ruleModoApertura=ruleModoApertura 
	 { $current=$iv_ruleModoApertura.current.getText(); }  
	 EOF 
;

// Rule ModoApertura
ruleModoApertura returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='escritura' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModoAperturaAccess().getEscrituraKeyword_0()); 
    }

    |
	kw='lectura' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModoAperturaAccess().getLecturaKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleNombreInterna
entryRuleNombreInterna returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNombreInternaRule()); } 
	 iv_ruleNombreInterna=ruleNombreInterna 
	 { $current=$iv_ruleNombreInterna.current.getText(); }  
	 EOF 
;

// Rule NombreInterna
ruleNombreInterna returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='cos' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getCosKeyword_0()); 
    }

    |
	kw='cuadrado' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getCuadradoKeyword_1()); 
    }

    |
	kw='exp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getExpKeyword_2()); 
    }

    |
	kw='ln' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getLnKeyword_3()); 
    }

    |
	kw='log' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getLogKeyword_4()); 
    }

    |
	kw='sen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getSenKeyword_5()); 
    }

    |
	kw='sqrt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getSqrtKeyword_6()); 
    }

    |
	kw='longitud' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getLongitudKeyword_7()); 
    }

    |
	kw='concatena' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNombreInternaAccess().getConcatenaKeyword_8()); 
    }
)
    ;





// Entry rule entryRuleOperador
entryRuleOperador returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperadorRule()); }
	 iv_ruleOperador=ruleOperador 
	 { $current=$iv_ruleOperador.current; } 
	 EOF 
;

// Rule Operador
ruleOperador returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getVariableIDParserRuleCall_0()); 
    }
    this_VariableID_0=ruleVariableID
    { 
        $current = $this_VariableID_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getConstCadenaParserRuleCall_1()); 
    }
    this_ConstCadena_1=ruleConstCadena
    { 
        $current = $this_ConstCadena_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getCaracterParserRuleCall_2()); 
    }
    this_Caracter_2=ruleCaracter
    { 
        $current = $this_Caracter_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getNumeroEnteroParserRuleCall_3()); 
    }
    this_NumeroEntero_3=ruleNumeroEntero
    { 
        $current = $this_NumeroEntero_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getNumeroDecimalParserRuleCall_4()); 
    }
    this_NumeroDecimal_4=ruleNumeroDecimal
    { 
        $current = $this_NumeroDecimal_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getValorBooleanoParserRuleCall_5()); 
    }
    this_ValorBooleano_5=ruleValorBooleano
    { 
        $current = $this_ValorBooleano_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getValorComplejoParserRuleCall_6()); 
    }
    this_ValorComplejo_6=ruleValorComplejo
    { 
        $current = $this_ValorComplejo_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCaracter
entryRuleCaracter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaracterRule()); }
	 iv_ruleCaracter=ruleCaracter 
	 { $current=$iv_ruleCaracter.current; } 
	 EOF 
;

// Rule Caracter
ruleCaracter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_contenido_0_0=RULE_CAR
		{
			newLeafNode(lv_contenido_0_0, grammarAccess.getCaracterAccess().getContenidoCARTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaracterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contenido",
        		lv_contenido_0_0, 
        		"CAR");
	    }

)
)
;





// Entry rule entryRulevalor
entryRulevalor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorRule()); }
	 iv_rulevalor=rulevalor 
	 { $current=$iv_rulevalor.current; } 
	 EOF 
;

// Rule valor
rulevalor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValorAccess().getLlamadaFuncionParserRuleCall_0()); 
    }
    this_LlamadaFuncion_0=ruleLlamadaFuncion
    { 
        $current = $this_LlamadaFuncion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getVariableIDParserRuleCall_1()); 
    }
    this_VariableID_1=ruleVariableID
    { 
        $current = $this_VariableID_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getConstCadenaParserRuleCall_2()); 
    }
    this_ConstCadena_2=ruleConstCadena
    { 
        $current = $this_ConstCadena_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getNumeroEnteroParserRuleCall_3()); 
    }
    this_NumeroEntero_3=ruleNumeroEntero
    { 
        $current = $this_NumeroEntero_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getNumeroDecimalParserRuleCall_4()); 
    }
    this_NumeroDecimal_4=ruleNumeroDecimal
    { 
        $current = $this_NumeroDecimal_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getOperacionParserRuleCall_5()); 
    }
    this_operacion_5=ruleoperacion
    { 
        $current = $this_operacion_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getValorBooleanoParserRuleCall_6()); 
    }
    this_ValorBooleano_6=ruleValorBooleano
    { 
        $current = $this_ValorBooleano_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getCaracterParserRuleCall_7()); 
    }
    this_Caracter_7=ruleCaracter
    { 
        $current = $this_Caracter_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getInternasParserRuleCall_8()); 
    }
    this_Internas_8=ruleInternas
    { 
        $current = $this_Internas_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getUnariaParserRuleCall_9()); 
    }
    this_unaria_9=ruleunaria
    { 
        $current = $this_unaria_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getValorComplejoParserRuleCall_10()); 
    }
    this_ValorComplejo_10=ruleValorComplejo
    { 
        $current = $this_ValorComplejo_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulevaloresLeer
entryRulevaloresLeer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValoresLeerRule()); }
	 iv_rulevaloresLeer=rulevaloresLeer 
	 { $current=$iv_rulevaloresLeer.current; } 
	 EOF 
;

// Rule valoresLeer
rulevaloresLeer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValoresLeerAccess().getVariableIDParserRuleCall_0()); 
    }
    this_VariableID_0=ruleVariableID
    { 
        $current = $this_VariableID_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValoresLeerAccess().getValorVectorParserRuleCall_1()); 
    }
    this_ValorVector_1=ruleValorVector
    { 
        $current = $this_ValorVector_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValoresLeerAccess().getValorMatrizParserRuleCall_2()); 
    }
    this_ValorMatriz_2=ruleValorMatriz
    { 
        $current = $this_ValorMatriz_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValoresLeerAccess().getValorRegistroParserRuleCall_3()); 
    }
    this_ValorRegistro_3=ruleValorRegistro
    { 
        $current = $this_ValorRegistro_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleValorComplejo
entryRuleValorComplejo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorComplejoRule()); }
	 iv_ruleValorComplejo=ruleValorComplejo 
	 { $current=$iv_ruleValorComplejo.current; } 
	 EOF 
;

// Rule ValorComplejo
ruleValorComplejo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValorComplejoAccess().getValorRegistroParserRuleCall_0()); 
    }
    this_ValorRegistro_0=ruleValorRegistro
    { 
        $current = $this_ValorRegistro_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorComplejoAccess().getValorVectorParserRuleCall_1()); 
    }
    this_ValorVector_1=ruleValorVector
    { 
        $current = $this_ValorVector_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorComplejoAccess().getValorMatrizParserRuleCall_2()); 
    }
    this_ValorMatriz_2=ruleValorMatriz
    { 
        $current = $this_ValorMatriz_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleValorMatriz
entryRuleValorMatriz returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorMatrizRule()); }
	 iv_ruleValorMatriz=ruleValorMatriz 
	 { $current=$iv_ruleValorMatriz.current; } 
	 EOF 
;

// Rule ValorMatriz
ruleValorMatriz returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValorMatrizAccess().getNombre_matrizEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_matriz_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorMatrizRule());
	        }
       		set(
       			$current, 
       			"nombre_matriz",
        		lv_nombre_matriz_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValorMatrizAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getValorMatrizAccess().getIndicesNumeroEnteroParserRuleCall_2_0_0()); 
	    }
		lv_indices_2_0=ruleNumeroEntero		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorMatrizRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_2_0, 
        		"NumeroEntero");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValorMatrizAccess().getIndicesVariableIDParserRuleCall_2_1_0()); 
	    }
		lv_indices_3_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorMatrizRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_3_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4='][' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getValorMatrizAccess().getRightSquareBracketLeftSquareBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getValorMatrizAccess().getIndicesNumeroEnteroParserRuleCall_4_0_0()); 
	    }
		lv_indices_5_0=ruleNumeroEntero		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorMatrizRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_5_0, 
        		"NumeroEntero");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValorMatrizAccess().getIndicesVariableIDParserRuleCall_4_1_0()); 
	    }
		lv_indices_6_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorMatrizRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_6_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getValorMatrizAccess().getRightSquareBracketKeyword_5());
    }
(	otherlv_8='.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getValorMatrizAccess().getFullStopKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValorMatrizAccess().getCampoCampoRegistroParserRuleCall_6_1_0()); 
	    }
		lv_campo_9_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorMatrizRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_9_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleValorRegistro
entryRuleValorRegistro returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorRegistroRule()); }
	 iv_ruleValorRegistro=ruleValorRegistro 
	 { $current=$iv_ruleValorRegistro.current; } 
	 EOF 
;

// Rule ValorRegistro
ruleValorRegistro returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValorRegistroAccess().getNombre_registroEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_registro_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorRegistroRule());
	        }
       		set(
       			$current, 
       			"nombre_registro",
        		lv_nombre_registro_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValorRegistroAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getValorRegistroAccess().getCampoCampoRegistroParserRuleCall_2_0_0()); 
	    }
		lv_campo_2_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorRegistroRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_2_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getValorRegistroAccess().getFullStopKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValorRegistroAccess().getCampoCampoRegistroParserRuleCall_2_1_1_0()); 
	    }
		lv_campo_4_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorRegistroRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_4_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleValorVector
entryRuleValorVector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorVectorRule()); }
	 iv_ruleValorVector=ruleValorVector 
	 { $current=$iv_ruleValorVector.current; } 
	 EOF 
;

// Rule ValorVector
ruleValorVector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValorVectorAccess().getNombre_vectorEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_vector_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorVectorRule());
	        }
       		set(
       			$current, 
       			"nombre_vector",
        		lv_nombre_vector_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValorVectorAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getValorVectorAccess().getIndiceNumeroEnteroParserRuleCall_2_0_0()); 
	    }
		lv_indice_2_0=ruleNumeroEntero		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorVectorRule());
	        }
       		set(
       			$current, 
       			"indice",
        		lv_indice_2_0, 
        		"NumeroEntero");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValorVectorAccess().getIndiceVariableIDParserRuleCall_2_1_0()); 
	    }
		lv_indice_3_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorVectorRule());
	        }
       		set(
       			$current, 
       			"indice",
        		lv_indice_3_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getValorVectorAccess().getRightSquareBracketKeyword_3());
    }
(	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getValorVectorAccess().getFullStopKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValorVectorAccess().getCampoCampoRegistroParserRuleCall_4_1_0()); 
	    }
		lv_campo_6_0=ruleCampoRegistro		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorVectorRule());
	        }
       		add(
       			$current, 
       			"campo",
        		lv_campo_6_0, 
        		"CampoRegistro");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleCampoRegistro
entryRuleCampoRegistro returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCampoRegistroRule()); }
	 iv_ruleCampoRegistro=ruleCampoRegistro 
	 { $current=$iv_ruleCampoRegistro.current; } 
	 EOF 
;

// Rule CampoRegistro
ruleCampoRegistro returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getCampoRegistroAccess().getNombre_campoEStringParserRuleCall_0()); 
	    }
		lv_nombre_campo_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCampoRegistroRule());
	        }
       		set(
       			$current, 
       			"nombre_campo",
        		lv_nombre_campo_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleTipo
entryRuleTipo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoRule()); }
	 iv_ruleTipo=ruleTipo 
	 { $current=$iv_ruleTipo.current; } 
	 EOF 
;

// Rule Tipo
ruleTipo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTipoAccess().getTipoDefinidoParserRuleCall_0()); 
    }
    this_TipoDefinido_0=ruleTipoDefinido
    { 
        $current = $this_TipoDefinido_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTipoAccess().getTipoExistenteParserRuleCall_1()); 
    }
    this_TipoExistente_1=ruleTipoExistente
    { 
        $current = $this_TipoExistente_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTipoDefinido
entryRuleTipoDefinido returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoDefinidoRule()); }
	 iv_ruleTipoDefinido=ruleTipoDefinido 
	 { $current=$iv_ruleTipoDefinido.current; } 
	 EOF 
;

// Rule TipoDefinido
ruleTipoDefinido returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTipoDefinidoAccess().getTipoEStringParserRuleCall_0()); 
	    }
		lv_tipo_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTipoDefinidoRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleTipoExistente
entryRuleTipoExistente returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoExistenteRule()); }
	 iv_ruleTipoExistente=ruleTipoExistente 
	 { $current=$iv_ruleTipoExistente.current; } 
	 EOF 
;

// Rule TipoExistente
ruleTipoExistente returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTipoExistenteAccess().getTipoTipoVariableParserRuleCall_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTipoExistenteRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleConstantes
entryRuleConstantes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantesRule()); }
	 iv_ruleConstantes=ruleConstantes 
	 { $current=$iv_ruleConstantes.current; } 
	 EOF 
;

// Rule Constantes
ruleConstantes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstantesAccess().getVariableVariableParserRuleCall_0_0()); 
	    }
		lv_variable_0_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantesRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantesAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantesAccess().getValorValorParserRuleCall_2_0()); 
	    }
		lv_valor_2_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantesRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVector
entryRuleVector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVectorRule()); }
	 iv_ruleVector=ruleVector 
	 { $current=$iv_ruleVector.current; } 
	 EOF 
;

// Rule Vector
ruleVector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='vector' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVectorAccess().getVectorKeyword_0());
    }
	otherlv_1=' [' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVectorAccess().getSpaceLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getValorNumeroEnteroParserRuleCall_2_0_0()); 
	    }
		lv_valor_2_0=ruleNumeroEntero		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"NumeroEntero");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getValorVariableIDParserRuleCall_2_1_0()); 
	    }
		lv_valor_3_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4='] ' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVectorAccess().getRightSquareBracketSpaceKeyword_3());
    }
	otherlv_5='de ' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVectorAccess().getDeKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getTipoTipoParserRuleCall_5_0()); 
	    }
		lv_tipo_6_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_6_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=' : ' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVectorAccess().getSpaceColonSpaceKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getNombreEStringParserRuleCall_7_0()); 
	    }
		lv_nombre_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMatriz
entryRuleMatriz returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatrizRule()); }
	 iv_ruleMatriz=ruleMatriz 
	 { $current=$iv_ruleMatriz.current; } 
	 EOF 
;

// Rule Matriz
ruleMatriz returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='matriz' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatrizAccess().getMatrizKeyword_0());
    }
	otherlv_1=' [' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMatrizAccess().getSpaceLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getValorNumeroEnteroParserRuleCall_2_0_0()); 
	    }
		lv_valor_2_0=ruleNumeroEntero		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"NumeroEntero");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getValorVariableIDParserRuleCall_2_1_0()); 
	    }
		lv_valor_3_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4='][' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMatrizAccess().getRightSquareBracketLeftSquareBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getValorNumeroEnteroParserRuleCall_4_0_0()); 
	    }
		lv_valor_5_0=ruleNumeroEntero		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_5_0, 
        		"NumeroEntero");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getValorVariableIDParserRuleCall_4_1_0()); 
	    }
		lv_valor_6_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_6_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7='] ' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMatrizAccess().getRightSquareBracketSpaceKeyword_5());
    }
	otherlv_8='de ' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMatrizAccess().getDeKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getTipoTipoParserRuleCall_7_0()); 
	    }
		lv_tipo_9_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_9_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=' : ' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMatrizAccess().getSpaceColonSpaceKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrizAccess().getNombreEStringParserRuleCall_9_0()); 
	    }
		lv_nombre_11_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrizRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_11_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRegistro
entryRuleRegistro returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegistroRule()); }
	 iv_ruleRegistro=ruleRegistro 
	 { $current=$iv_ruleRegistro.current; } 
	 EOF 
;

// Rule Registro
ruleRegistro returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='registro:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegistroAccess().getRegistroKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegistroAccess().getNombreEStringParserRuleCall_1_0()); 
	    }
		lv_nombre_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegistroRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getRegistroAccess().getVariableDeclaracionParserRuleCall_2_0_0()); 
	    }
		lv_variable_2_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegistroRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRegistroAccess().getVariableDeclaracionParserRuleCall_2_1_0()); 
	    }
		lv_variable_3_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegistroRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_3_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)	otherlv_4='fin_registro' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRegistroAccess().getFin_registroKeyword_3());
    }
)
;





// Entry rule entryRuleArchivo
entryRuleArchivo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArchivoRule()); }
	 iv_ruleArchivo=ruleArchivo 
	 { $current=$iv_ruleArchivo.current; } 
	 EOF 
;

// Rule Archivo
ruleArchivo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='archivo de ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArchivoAccess().getArchivoDeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArchivoAccess().getTipoTipoParserRuleCall_1_0()); 
	    }
		lv_tipo_1_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchivoRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_1_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArchivoAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArchivoAccess().getNombreEStringParserRuleCall_3_0()); 
	    }
		lv_nombre_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchivoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumerado
entryRuleEnumerado returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeradoRule()); }
	 iv_ruleEnumerado=ruleEnumerado 
	 { $current=$iv_ruleEnumerado.current; } 
	 EOF 
;

// Rule Enumerado
ruleEnumerado returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeradoAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeradoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumeradoAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumeradoAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeradoAccess().getValorValorParserRuleCall_3_0_0()); 
	    }
		lv_valor_3_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeradoRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumeradoAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeradoAccess().getValorValorParserRuleCall_3_1_1_0()); 
	    }
		lv_valor_5_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeradoRule());
	        }
       		add(
       			$current, 
       			"valor",
        		lv_valor_5_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumeradoAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSubrango
entryRuleSubrango returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubrangoRule()); }
	 iv_ruleSubrango=ruleSubrango 
	 { $current=$iv_ruleSubrango.current; } 
	 EOF 
;

// Rule Subrango
ruleSubrango returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSubrangoAccess().getSubrangoNumericoParserRuleCall()); 
    }
    this_SubrangoNumerico_0=ruleSubrangoNumerico
    { 
        $current = $this_SubrangoNumerico_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSubrangoNumerico
entryRuleSubrangoNumerico returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubrangoNumericoRule()); }
	 iv_ruleSubrangoNumerico=ruleSubrangoNumerico 
	 { $current=$iv_ruleSubrangoNumerico.current; } 
	 EOF 
;

// Rule SubrangoNumerico
ruleSubrangoNumerico returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoNumericoAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoNumericoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubrangoNumericoAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoNumericoAccess().getLimite_infEIntParserRuleCall_2_0()); 
	    }
		lv_limite_inf_2_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoNumericoRule());
	        }
       		set(
       			$current, 
       			"limite_inf",
        		lv_limite_inf_2_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='..' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubrangoNumericoAccess().getFullStopFullStopKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubrangoNumericoAccess().getLimite_supEIntParserRuleCall_4_0()); 
	    }
		lv_limite_sup_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubrangoNumericoRule());
	        }
       		set(
       			$current, 
       			"limite_sup",
        		lv_limite_sup_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInicio
entryRuleInicio returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInicioRule()); }
	 iv_ruleInicio=ruleInicio 
	 { $current=$iv_ruleInicio.current; } 
	 EOF 
;

// Rule Inicio
ruleInicio returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInicioAccess().getInicioAction_0(),
            $current);
    }
)	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInicioAccess().getVarKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getDeclaracionDeclaracionParserRuleCall_2_0_0()); 
	    }
		lv_declaracion_2_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_2_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getDeclaracionDeclaracionParserRuleCall_2_1_0()); 
	    }
		lv_declaracion_3_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_3_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_4='inicio' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInicioAccess().getInicioKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getTieneSentenciasParserRuleCall_4_0_0()); 
	    }
		lv_tiene_5_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"tiene",
        		lv_tiene_5_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getTieneSentenciasParserRuleCall_4_1_0()); 
	    }
		lv_tiene_6_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"tiene",
        		lv_tiene_6_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_7='fin_inicio' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInicioAccess().getFin_inicioKeyword_5());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleDeclaracionVariable
entryRuleDeclaracionVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaracionVariableRule()); }
	 iv_ruleDeclaracionVariable=ruleDeclaracionVariable 
	 { $current=$iv_ruleDeclaracionVariable.current; } 
	 EOF 
;

// Rule DeclaracionVariable
ruleDeclaracionVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getTipoTipoVariableParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclaracionVariableAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getVariableVariableParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclaracionVariableAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getVariableVariableParserRuleCall_3_1_0()); 
	    }
		lv_variable_4_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_4_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleDeclaracionPropia
entryRuleDeclaracionPropia returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaracionPropiaRule()); }
	 iv_ruleDeclaracionPropia=ruleDeclaracionPropia 
	 { $current=$iv_ruleDeclaracionPropia.current; } 
	 EOF 
;

// Rule DeclaracionPropia
ruleDeclaracionPropia returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionPropiaAccess().getTipoEStringParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionPropiaRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclaracionPropiaAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionPropiaAccess().getVariableVariableParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionPropiaRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclaracionPropiaAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionPropiaAccess().getVariableVariableParserRuleCall_3_1_0()); 
	    }
		lv_variable_4_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionPropiaRule());
	        }
       		add(
       			$current, 
       			"variable",
        		lv_variable_4_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLlamadaFuncion
entryRuleLlamadaFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLlamadaFuncionRule()); }
	 iv_ruleLlamadaFuncion=ruleLlamadaFuncion 
	 { $current=$iv_ruleLlamadaFuncion.current; } 
	 EOF 
;

// Rule LlamadaFuncion
ruleLlamadaFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLlamadaFuncionAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLlamadaFuncionRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLlamadaFuncionAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLlamadaFuncionAccess().getOperadorValorParserRuleCall_2_0_0()); 
	    }
		lv_operador_2_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLlamadaFuncionRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLlamadaFuncionAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLlamadaFuncionAccess().getOperadorValorParserRuleCall_2_1_1_0()); 
	    }
		lv_operador_4_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLlamadaFuncionRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_4_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLlamadaFuncionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAsignacion
entryRuleAsignacion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsignacionRule()); }
	 iv_ruleAsignacion=ruleAsignacion 
	 { $current=$iv_ruleAsignacion.current; } 
	 EOF 
;

// Rule Asignacion
ruleAsignacion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAsignacionAccess().getAsignacionNormalParserRuleCall_0()); 
    }
    this_AsignacionNormal_0=ruleAsignacionNormal
    { 
        $current = $this_AsignacionNormal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAsignacionAccess().getAsignacionComplejaParserRuleCall_1()); 
    }
    this_AsignacionCompleja_1=ruleAsignacionCompleja
    { 
        $current = $this_AsignacionCompleja_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAsignacionNormal
entryRuleAsignacionNormal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsignacionNormalRule()); }
	 iv_ruleAsignacionNormal=ruleAsignacionNormal 
	 { $current=$iv_ruleAsignacionNormal.current; } 
	 EOF 
;

// Rule AsignacionNormal
ruleAsignacionNormal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionNormalAccess().getLvalueEStringParserRuleCall_0_0()); 
	    }
		lv_lvalue_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionNormalRule());
	        }
       		set(
       			$current, 
       			"lvalue",
        		lv_lvalue_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Mat_1_0=RULE_MAT
		{
			newLeafNode(lv_Mat_1_0, grammarAccess.getAsignacionNormalAccess().getMatMATTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsignacionNormalRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"Mat",
        		lv_Mat_1_0, 
        		"MAT");
	    }

)
)*	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAsignacionNormalAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionNormalAccess().getOperadorValorParserRuleCall_3_0()); 
	    }
		lv_operador_3_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionNormalRule());
	        }
       		set(
       			$current, 
       			"operador",
        		lv_operador_3_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAsignacionCompleja
entryRuleAsignacionCompleja returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsignacionComplejaRule()); }
	 iv_ruleAsignacionCompleja=ruleAsignacionCompleja 
	 { $current=$iv_ruleAsignacionCompleja.current; } 
	 EOF 
;

// Rule AsignacionCompleja
ruleAsignacionCompleja returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionComplejaAccess().getComplejoValorComplejoParserRuleCall_0_0()); 
	    }
		lv_complejo_0_0=ruleValorComplejo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionComplejaRule());
	        }
       		set(
       			$current, 
       			"complejo",
        		lv_complejo_0_0, 
        		"ValorComplejo");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Mat_1_0=RULE_MAT
		{
			newLeafNode(lv_Mat_1_0, grammarAccess.getAsignacionComplejaAccess().getMatMATTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsignacionComplejaRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"Mat",
        		lv_Mat_1_0, 
        		"MAT");
	    }

)
)*	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAsignacionComplejaAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionComplejaAccess().getOperadorValorParserRuleCall_3_0()); 
	    }
		lv_operador_3_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionComplejaRule());
	        }
       		set(
       			$current, 
       			"operador",
        		lv_operador_3_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEscribir
entryRuleEscribir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEscribirRule()); }
	 iv_ruleEscribir=ruleEscribir 
	 { $current=$iv_ruleEscribir.current; } 
	 EOF 
;

// Rule Escribir
ruleEscribir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='escribir' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEscribirAccess().getEscribirKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEscribirAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEscribirAccess().getOperadorOperadorParserRuleCall_2_0()); 
	    }
		lv_operador_2_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEscribirRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEscribirAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEscribirAccess().getOperadorOperadorParserRuleCall_3_1_0()); 
	    }
		lv_operador_4_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEscribirRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_4_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEscribirAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLeer
entryRuleLeer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLeerRule()); }
	 iv_ruleLeer=ruleLeer 
	 { $current=$iv_ruleLeer.current; } 
	 EOF 
;

// Rule Leer
ruleLeer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='leer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLeerAccess().getLeerKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLeerAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLeerAccess().getVariableValoresLeerParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=rulevaloresLeer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLeerRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"valoresLeer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLeerAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleSi
entryRuleSi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiRule()); }
	 iv_ruleSi=ruleSi 
	 { $current=$iv_ruleSi.current; } 
	 EOF 
;

// Rule Si
ruleSi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='si' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiAccess().getSiKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getValorValorParserRuleCall_1_0()); 
	    }
		lv_valor_1_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_1_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='entonces' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSiAccess().getEntoncesKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSentenciasSentenciasParserRuleCall_3_0_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSentenciasSentenciasParserRuleCall_3_1_0()); 
	    }
		lv_sentencias_4_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_4_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getDevuelveDevolverParserRuleCall_4_0()); 
	    }
		lv_devuelve_5_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_5_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSinoSinoParserRuleCall_5_0()); 
	    }
		lv_sino_6_0=ruleSino		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"sino",
        		lv_sino_6_0, 
        		"Sino");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='fin_si' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSiAccess().getFin_siKeyword_6());
    }
)
;





// Entry rule entryRulemientras
entryRulemientras returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMientrasRule()); }
	 iv_rulemientras=rulemientras 
	 { $current=$iv_rulemientras.current; } 
	 EOF 
;

// Rule mientras
rulemientras returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mientras' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMientrasAccess().getMientrasKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getValorValorParserRuleCall_1_0()); 
	    }
		lv_valor_1_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_1_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='hacer' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMientrasAccess().getHacerKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getSentenciasSentenciasParserRuleCall_3_0_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getSentenciasSentenciasParserRuleCall_3_1_0()); 
	    }
		lv_sentencias_4_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_4_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_5='fin_mientras' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMientrasAccess().getFin_mientrasKeyword_4());
    }
)
;





// Entry rule entryRulerepetir
entryRulerepetir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepetirRule()); }
	 iv_rulerepetir=rulerepetir 
	 { $current=$iv_rulerepetir.current; } 
	 EOF 
;

// Rule repetir
rulerepetir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='repetir' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRepetirAccess().getRepetirKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getSentenciasSentenciasParserRuleCall_1_0_0()); 
	    }
		lv_sentencias_1_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_1_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getSentenciasSentenciasParserRuleCall_1_1_0()); 
	    }
		lv_sentencias_2_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_2_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_3='hasta_que' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRepetirAccess().getHasta_queKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getValorValorParserRuleCall_3_0()); 
	    }
		lv_valor_4_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_4_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledesde
entryRuledesde returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesdeRule()); }
	 iv_ruledesde=ruledesde 
	 { $current=$iv_ruledesde.current; } 
	 EOF 
;

// Rule desde
ruledesde returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='desde' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDesdeAccess().getDesdeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getAsignacionAsignacionNormalParserRuleCall_1_0()); 
	    }
		lv_asignacion_1_0=ruleAsignacionNormal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		set(
       			$current, 
       			"asignacion",
        		lv_asignacion_1_0, 
        		"AsignacionNormal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='hasta' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDesdeAccess().getHastaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getValorValorParserRuleCall_3_0()); 
	    }
		lv_valor_3_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='hacer' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDesdeAccess().getHacerKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getSentenciasSentenciasParserRuleCall_5_0_0()); 
	    }
		lv_sentencias_5_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_5_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getSentenciasSentenciasParserRuleCall_5_1_0()); 
	    }
		lv_sentencias_6_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_6_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_7='fin_desde' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDesdeAccess().getFin_desdeKeyword_6());
    }
)
;





// Entry rule entryRuleCaso
entryRuleCaso returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCasoRule()); }
	 iv_ruleCaso=ruleCaso 
	 { $current=$iv_ruleCaso.current; } 
	 EOF 
;

// Rule Caso
ruleCaso returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getOperadorOperadorParserRuleCall_0_0()); 
	    }
		lv_operador_0_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		set(
       			$current, 
       			"operador",
        		lv_operador_0_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCasoAccess().getColonKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getSentenciasSentenciasParserRuleCall_2_0_0()); 
	    }
		lv_sentencias_2_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_2_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getSentenciasSentenciasParserRuleCall_2_1_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCasoAccess().getDevuelveDevolverParserRuleCall_3_0()); 
	    }
		lv_devuelve_4_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCasoRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_4_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulesegun
entryRulesegun returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegunRule()); }
	 iv_rulesegun=rulesegun 
	 { $current=$iv_rulesegun.current; } 
	 EOF 
;

// Rule segun
rulesegun returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='segun_sea' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSegunAccess().getSegun_seaKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSegunAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getValorValorParserRuleCall_2_0()); 
	    }
		lv_valor_2_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_2_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSegunAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='hacer' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSegunAccess().getHacerKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getCasoCasoParserRuleCall_5_0_0()); 
	    }
		lv_caso_5_0=ruleCaso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"caso",
        		lv_caso_5_0, 
        		"Caso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getCasoCasoParserRuleCall_5_1_0()); 
	    }
		lv_caso_6_0=ruleCaso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"caso",
        		lv_caso_6_0, 
        		"Caso");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_7='en_otro_caso:' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSegunAccess().getEn_otro_casoKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getSentenciasSentenciasParserRuleCall_7_0_0()); 
	    }
		lv_sentencias_8_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_8_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getSentenciasSentenciasParserRuleCall_7_1_0()); 
	    }
		lv_sentencias_9_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_9_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSegunAccess().getDevuelveDevolverParserRuleCall_8_0()); 
	    }
		lv_devuelve_10_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegunRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_10_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11='fin_segun' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSegunAccess().getFin_segunKeyword_9());
    }
)
;





// Entry rule entryRuleincremento
entryRuleincremento returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncrementoRule()); }
	 iv_ruleincremento=ruleincremento 
	 { $current=$iv_ruleincremento.current; } 
	 EOF 
;

// Rule incremento
ruleincremento returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIncrementoAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncrementoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIncrementoAccess().getSsignoIncParserRuleCall_1_0()); 
	    }
		lv_ssigno_1_0=ruleinc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncrementoRule());
	        }
       		set(
       			$current, 
       			"ssigno",
        		lv_ssigno_1_0, 
        		"inc");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleunaria
entryRuleunaria returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnariaRule()); }
	 iv_ruleunaria=ruleunaria 
	 { $current=$iv_ruleunaria.current; } 
	 EOF 
;

// Rule unaria
ruleunaria returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnariaAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnariaAccess().getSsignoIncParserRuleCall_1_0()); 
	    }
		lv_ssigno_1_0=ruleinc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnariaRule());
	        }
       		set(
       			$current, 
       			"ssigno",
        		lv_ssigno_1_0, 
        		"inc");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnariaAccess().getVariableValorParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnariaRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnariaAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleTipoVariable
entryRuleTipoVariable returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoVariableRule()); } 
	 iv_ruleTipoVariable=ruleTipoVariable 
	 { $current=$iv_ruleTipoVariable.current.getText(); }  
	 EOF 
;

// Rule TipoVariable
ruleTipoVariable returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='entero' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getEnteroKeyword_0()); 
    }

    |
	kw='caracter' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getCaracterKeyword_1()); 
    }

    |
	kw='real' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getRealKeyword_2()); 
    }

    |
	kw='logico' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getLogicoKeyword_3()); 
    }

    |
	kw='cadena' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getCadenaKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Mat_1_0=RULE_MAT
		{
			newLeafNode(lv_Mat_1_0, grammarAccess.getVariableAccess().getMatMATTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"Mat",
        		lv_Mat_1_0, 
        		"MAT");
	    }

)
)*)
;





// Entry rule entryRuleVariableID
entryRuleVariableID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableIDRule()); }
	 iv_ruleVariableID=ruleVariableID 
	 { $current=$iv_ruleVariableID.current; } 
	 EOF 
;

// Rule VariableID
ruleVariableID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableIDAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableIDRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Mat_1_0=RULE_MAT
		{
			newLeafNode(lv_Mat_1_0, grammarAccess.getVariableIDAccess().getMatMATTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableIDRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"Mat",
        		lv_Mat_1_0, 
        		"MAT");
	    }

)
)*)
;





// Entry rule entryRuleConstCadena
entryRuleConstCadena returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstCadenaRule()); }
	 iv_ruleConstCadena=ruleConstCadena 
	 { $current=$iv_ruleConstCadena.current; } 
	 EOF 
;

// Rule ConstCadena
ruleConstCadena returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_contenido_0_0=RULE_CAD
		{
			newLeafNode(lv_contenido_0_0, grammarAccess.getConstCadenaAccess().getContenidoCADTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstCadenaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contenido",
        		lv_contenido_0_0, 
        		"CAD");
	    }

)
)
;





// Entry rule entryRuleNumeroEntero
entryRuleNumeroEntero returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumeroEnteroRule()); }
	 iv_ruleNumeroEntero=ruleNumeroEntero 
	 { $current=$iv_ruleNumeroEntero.current; } 
	 EOF 
;

// Rule NumeroEntero
ruleNumeroEntero returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumeroEnteroAccess().getValorEIntParserRuleCall_0()); 
	    }
		lv_valor_0_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumeroEnteroRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_0_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleNumeroDecimal
entryRuleNumeroDecimal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumeroDecimalRule()); }
	 iv_ruleNumeroDecimal=ruleNumeroDecimal 
	 { $current=$iv_ruleNumeroDecimal.current; } 
	 EOF 
;

// Rule NumeroDecimal
ruleNumeroDecimal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumeroDecimalAccess().getValorEFloatParserRuleCall_0()); 
	    }
		lv_valor_0_0=ruleEFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumeroDecimalRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_0_0, 
        		"EFloat");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleValorBooleano
entryRuleValorBooleano returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorBooleanoRule()); }
	 iv_ruleValorBooleano=ruleValorBooleano 
	 { $current=$iv_ruleValorBooleano.current; } 
	 EOF 
;

// Rule ValorBooleano
ruleValorBooleano returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getValorBooleanoAccess().getValorBooleanoParserRuleCall_0()); 
	    }
		lv_valor_0_0=rulebooleano		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorBooleanoRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_0_0, 
        		"booleano");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEFloatRule()); } 
	 iv_ruleEFloat=ruleEFloat 
	 { $current=$iv_ruleEFloat.current.getText(); }  
	 EOF 
;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); 
    }
)(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); 
    }
)?)
    ;





// Entry rule entryRulebooleano
entryRulebooleano returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanoRule()); } 
	 iv_rulebooleano=rulebooleano 
	 { $current=$iv_rulebooleano.current.getText(); }  
	 EOF 
;

// Rule booleano
rulebooleano returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='verdadero' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanoAccess().getVerdaderoKeyword_0()); 
    }

    |
	kw='falso' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanoAccess().getFalsoKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleoperacion
entryRuleoperacion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperacionRule()); }
	 iv_ruleoperacion=ruleoperacion 
	 { $current=$iv_ruleoperacion.current; } 
	 EOF 
;

// Rule operacion
ruleoperacion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperacionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperacionAccess().getOp_izqOperando_izqParserRuleCall_1_0()); 
	    }
		lv_op_izq_1_0=ruleoperando_izq		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperacionRule());
	        }
       		set(
       			$current, 
       			"op_izq",
        		lv_op_izq_1_0, 
        		"operando_izq");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperacionAccess().getSigno_opSignoParserRuleCall_2_0()); 
	    }
		lv_signo_op_2_0=rulesigno		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperacionRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signo");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperacionAccess().getOp_derOperando_derParserRuleCall_3_0()); 
	    }
		lv_op_der_3_0=ruleoperando_der		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperacionRule());
	        }
       		set(
       			$current, 
       			"op_der",
        		lv_op_der_3_0, 
        		"operando_der");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperacionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRulesigno
entryRulesigno returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoRule()); } 
	 iv_rulesigno=rulesigno 
	 { $current=$iv_rulesigno.current.getText(); }  
	 EOF 
;

// Rule signo
rulesigno returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getAsteriskKeyword_2()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getSolidusKeyword_3()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getLessThanSignKeyword_4()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getGreaterThanSignKeyword_5()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getGreaterThanSignEqualsSignKeyword_6()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getLessThanSignEqualsSignKeyword_7()); 
    }

    |
	kw='y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getYKeyword_8()); 
    }

    |
	kw='o' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getOKeyword_9()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getEqualsSignEqualsSignKeyword_10()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getExclamationMarkEqualsSignKeyword_11()); 
    }
)
    ;





// Entry rule entryRuleoperando_izq
entryRuleoperando_izq returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperando_izqRule()); }
	 iv_ruleoperando_izq=ruleoperando_izq 
	 { $current=$iv_ruleoperando_izq.current; } 
	 EOF 
;

// Rule operando_izq
ruleoperando_izq returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperando_izqAccess().getOper_izqValorParserRuleCall_0()); 
	    }
		lv_oper_izq_0_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperando_izqRule());
	        }
       		set(
       			$current, 
       			"oper_izq",
        		lv_oper_izq_0_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleoperando_der
entryRuleoperando_der returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperando_derRule()); }
	 iv_ruleoperando_der=ruleoperando_der 
	 { $current=$iv_ruleoperando_der.current; } 
	 EOF 
;

// Rule operando_der
ruleoperando_der returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperando_derAccess().getOper_derValorParserRuleCall_0()); 
	    }
		lv_oper_der_0_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperando_derRule());
	        }
       		set(
       			$current, 
       			"oper_der",
        		lv_oper_der_0_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSino
entryRuleSino returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSinoRule()); }
	 iv_ruleSino=ruleSino 
	 { $current=$iv_ruleSino.current; } 
	 EOF 
;

// Rule Sino
ruleSino returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSinoAccess().getSinoAction_0(),
            $current);
    }
)	otherlv_1='sino' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSinoAccess().getSinoKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getSentenciasSentenciasParserRuleCall_2_0_0()); 
	    }
		lv_sentencias_2_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_2_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getSentenciasSentenciasParserRuleCall_2_1_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getDevuelveDevolverParserRuleCall_3_0()); 
	    }
		lv_devuelve_4_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_4_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleDevolver
entryRuleDevolver returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDevolverRule()); }
	 iv_ruleDevolver=ruleDevolver 
	 { $current=$iv_ruleDevolver.current; } 
	 EOF 
;

// Rule Devolver
ruleDevolver returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDevolverAccess().getDevolverAction_0(),
            $current);
    }
)	otherlv_1='devolver' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDevolverAccess().getDevolverKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDevolverAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDevolverAccess().getDevuelveValorParserRuleCall_3_0()); 
	    }
		lv_devuelve_3_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDevolverRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_3_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDevolverAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleinc
entryRuleinc returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncRule()); } 
	 iv_ruleinc=ruleinc 
	 { $current=$iv_ruleinc.current.getText(); }  
	 EOF 
;

// Rule inc
ruleinc returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncAccess().getPlusSignPlusSignKeyword_0()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncAccess().getHyphenMinusHyphenMinusKeyword_1()); 
    }

    |
	kw='no' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncAccess().getNoKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleParametroFuncion
entryRuleParametroFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParametroFuncionRule()); }
	 iv_ruleParametroFuncion=ruleParametroFuncion 
	 { $current=$iv_ruleParametroFuncion.current; } 
	 EOF 
;

// Rule ParametroFuncion
ruleParametroFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getPasoTipoPasoParserRuleCall_0_0()); 
	    }
		lv_paso_0_0=ruleTipoPaso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"paso",
        		lv_paso_0_0, 
        		"TipoPaso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getTipoTipoParserRuleCall_1_0()); 
	    }
		lv_tipo_1_0=ruleTipo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_1_0, 
        		"Tipo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParametroFuncionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getVariableVariableParserRuleCall_3_0()); 
	    }
		lv_variable_3_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_3_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFuncion
entryRuleFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionRule()); }
	 iv_ruleFuncion=ruleFuncion 
	 { $current=$iv_ruleFuncion.current; } 
	 EOF 
;

// Rule Funcion
ruleFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getTipoTipoVariableParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='funcion' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuncionAccess().getFuncionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getNombreEStringParserRuleCall_2_0()); 
	    }
		lv_nombre_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuncionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getParametrofuncionParametroFuncionParserRuleCall_4_0_0()); 
	    }
		lv_parametrofuncion_4_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_4_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuncionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getParametrofuncionParametroFuncionParserRuleCall_4_1_1_0()); 
	    }
		lv_parametrofuncion_6_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_6_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuncionAccess().getRightParenthesisKeyword_5());
    }
(	otherlv_8='const' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFuncionAccess().getConstKeyword_6());
    }
)?(	otherlv_9='tipo' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFuncionAccess().getTipoKeyword_7());
    }
)?	otherlv_10='var' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFuncionAccess().getVarKeyword_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDeclaracionDeclaracionParserRuleCall_9_0_0()); 
	    }
		lv_declaracion_11_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_11_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDeclaracionDeclaracionParserRuleCall_9_1_0()); 
	    }
		lv_declaracion_12_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_12_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_13='inicio' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFuncionAccess().getInicioKeyword_10());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getSentenciasSentenciasParserRuleCall_11_0_0()); 
	    }
		lv_sentencias_14_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_14_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getSentenciasSentenciasParserRuleCall_11_1_0()); 
	    }
		lv_sentencias_15_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_15_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDevuelveDevolverParserRuleCall_12_0()); 
	    }
		lv_devuelve_16_0=ruleDevolver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_16_0, 
        		"Devolver");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_17='fin_funcion' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFuncionAccess().getFin_funcionKeyword_13());
    }
)
;





// Entry rule entryRuleProcedimiento
entryRuleProcedimiento returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedimientoRule()); }
	 iv_ruleProcedimiento=ruleProcedimiento 
	 { $current=$iv_ruleProcedimiento.current; } 
	 EOF 
;

// Rule Procedimiento
ruleProcedimiento returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='procedimiento' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcedimientoAccess().getProcedimientoKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getNombreEStringParserRuleCall_1_0()); 
	    }
		lv_nombre_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcedimientoAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getParametrofuncionParametroFuncionParserRuleCall_3_0_0()); 
	    }
		lv_parametrofuncion_3_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_3_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcedimientoAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getParametrofuncionParametroFuncionParserRuleCall_3_1_1_0()); 
	    }
		lv_parametrofuncion_5_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_5_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcedimientoAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7='const' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProcedimientoAccess().getConstKeyword_5());
    }
)?(	otherlv_8='tipo' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProcedimientoAccess().getTipoKeyword_6());
    }
)?	otherlv_9='var' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getProcedimientoAccess().getVarKeyword_7());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getDeclaracionDeclaracionParserRuleCall_8_0_0()); 
	    }
		lv_declaracion_10_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_10_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getDeclaracionDeclaracionParserRuleCall_8_1_0()); 
	    }
		lv_declaracion_11_0=ruleDeclaracion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"declaracion",
        		lv_declaracion_11_0, 
        		"Declaracion");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_12='inicio' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getProcedimientoAccess().getInicioKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getSentenciasSentenciasParserRuleCall_10_0_0()); 
	    }
		lv_sentencias_13_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_13_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getSentenciasSentenciasParserRuleCall_10_1_0()); 
	    }
		lv_sentencias_14_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_14_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_15='fin_procedimiento' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getProcedimientoAccess().getFin_procedimientoKeyword_11());
    }
)
;





// Entry rule entryRuleTipoPaso
entryRuleTipoPaso returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoPasoRule()); } 
	 iv_ruleTipoPaso=ruleTipoPaso 
	 { $current=$iv_ruleTipoPaso.current.getText(); }  
	 EOF 
;

// Rule TipoPaso
ruleTipoPaso returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getEKeyword_0()); 
    }

    |
	kw='E/S' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getESKeyword_1()); 
    }

    |
	kw='S' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getSKeyword_2()); 
    }
)
    ;





RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_CAD : '"' ('a'..'z'|'A'..'Z'|'_'|' '|'!'|'#'|'@'|'%'|'&'|'('|')'|'='|'?'|'\\'|'0'..'9')* '"';

RULE_CAR : '\'' ('a'..'z'|'A'..'Z'|'_'|' '|'!'|'#'|'@'|'%'|'&'|'('|')'|'='|'?'|'\\'|'0'..'9') '\'';

RULE_MAT : '[' ('a'..'z'|'A'..'Z'|'0'..'9')* ('--'|'++')? ']';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


