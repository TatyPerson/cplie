/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Codigo";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCodigo
entryRuleCodigo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodigoRule()); }
	 iv_ruleCodigo=ruleCodigo 
	 { $current=$iv_ruleCodigo.current; } 
	 EOF 
;

// Rule Codigo
ruleCodigo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getFuncionSubprocesoParserRuleCall_0_0_0()); 
	    }
		lv_funcion_0_0=ruleSubproceso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"funcion",
        		lv_funcion_0_0, 
        		"Subproceso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getFuncionSubprocesoParserRuleCall_0_1_0()); 
	    }
		lv_funcion_1_0=ruleSubproceso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		add(
       			$current, 
       			"funcion",
        		lv_funcion_1_0, 
        		"Subproceso");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCodigoAccess().getTieneInicioParserRuleCall_1_0()); 
	    }
		lv_tiene_2_0=ruleInicio		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodigoRule());
	        }
       		set(
       			$current, 
       			"tiene",
        		lv_tiene_2_0, 
        		"Inicio");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubproceso
entryRuleSubproceso returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubprocesoRule()); }
	 iv_ruleSubproceso=ruleSubproceso 
	 { $current=$iv_ruleSubproceso.current; } 
	 EOF 
;

// Rule Subproceso
ruleSubproceso returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubprocesoAccess().getFuncionParserRuleCall_0()); 
    }
    this_Funcion_0=ruleFuncion
    { 
        $current = $this_Funcion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubprocesoAccess().getProcedimientoParserRuleCall_1()); 
    }
    this_Procedimiento_1=ruleProcedimiento
    { 
        $current = $this_Procedimiento_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSentencias
entryRuleSentencias returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenciasRule()); }
	 iv_ruleSentencias=ruleSentencias 
	 { $current=$iv_ruleSentencias.current; } 
	 EOF 
;

// Rule Sentencias
ruleSentencias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getLlamadaFuncionParserRuleCall_0()); 
    }
    this_LlamadaFuncion_0=ruleLlamadaFuncion
    { 
        $current = $this_LlamadaFuncion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getAsignacionParserRuleCall_1()); 
    }
    this_Asignacion_1=ruleAsignacion
    { 
        $current = $this_Asignacion_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getEscribirParserRuleCall_2()); 
    }
    this_Escribir_2=ruleEscribir
    { 
        $current = $this_Escribir_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getLeerParserRuleCall_3()); 
    }
    this_Leer_3=ruleLeer
    { 
        $current = $this_Leer_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getSiParserRuleCall_4()); 
    }
    this_Si_4=ruleSi
    { 
        $current = $this_Si_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getMientrasParserRuleCall_5()); 
    }
    this_mientras_5=rulemientras
    { 
        $current = $this_mientras_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getRepetirParserRuleCall_6()); 
    }
    this_repetir_6=rulerepetir
    { 
        $current = $this_repetir_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getDesdeParserRuleCall_7()); 
    }
    this_desde_7=ruledesde
    { 
        $current = $this_desde_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenciasAccess().getIncrementoParserRuleCall_8()); 
    }
    this_incremento_8=ruleincremento
    { 
        $current = $this_incremento_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOperador
entryRuleOperador returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperadorRule()); }
	 iv_ruleOperador=ruleOperador 
	 { $current=$iv_ruleOperador.current; } 
	 EOF 
;

// Rule Operador
ruleOperador returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getVariableIDParserRuleCall_0()); 
    }
    this_VariableID_0=ruleVariableID
    { 
        $current = $this_VariableID_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getConstCadenaParserRuleCall_1()); 
    }
    this_ConstCadena_1=ruleConstCadena
    { 
        $current = $this_ConstCadena_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getCaracterParserRuleCall_2()); 
    }
    this_Caracter_2=ruleCaracter
    { 
        $current = $this_Caracter_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getNumeroEnteroParserRuleCall_3()); 
    }
    this_NumeroEntero_3=ruleNumeroEntero
    { 
        $current = $this_NumeroEntero_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getNumeroDecimalParserRuleCall_4()); 
    }
    this_NumeroDecimal_4=ruleNumeroDecimal
    { 
        $current = $this_NumeroDecimal_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperadorAccess().getValorBooleanoParserRuleCall_5()); 
    }
    this_ValorBooleano_5=ruleValorBooleano
    { 
        $current = $this_ValorBooleano_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCaracter
entryRuleCaracter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaracterRule()); }
	 iv_ruleCaracter=ruleCaracter 
	 { $current=$iv_ruleCaracter.current; } 
	 EOF 
;

// Rule Caracter
ruleCaracter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_contenido_0_0=RULE_CAR
		{
			newLeafNode(lv_contenido_0_0, grammarAccess.getCaracterAccess().getContenidoCARTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaracterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contenido",
        		lv_contenido_0_0, 
        		"CAR");
	    }

)
)
;





// Entry rule entryRulevalor
entryRulevalor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorRule()); }
	 iv_rulevalor=rulevalor 
	 { $current=$iv_rulevalor.current; } 
	 EOF 
;

// Rule valor
rulevalor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValorAccess().getLlamadaFuncionParserRuleCall_0()); 
    }
    this_LlamadaFuncion_0=ruleLlamadaFuncion
    { 
        $current = $this_LlamadaFuncion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getVariableIDParserRuleCall_1()); 
    }
    this_VariableID_1=ruleVariableID
    { 
        $current = $this_VariableID_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getConstCadenaParserRuleCall_2()); 
    }
    this_ConstCadena_2=ruleConstCadena
    { 
        $current = $this_ConstCadena_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getNumeroEnteroParserRuleCall_3()); 
    }
    this_NumeroEntero_3=ruleNumeroEntero
    { 
        $current = $this_NumeroEntero_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getNumeroDecimalParserRuleCall_4()); 
    }
    this_NumeroDecimal_4=ruleNumeroDecimal
    { 
        $current = $this_NumeroDecimal_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getOperacionParserRuleCall_5()); 
    }
    this_operacion_5=ruleoperacion
    { 
        $current = $this_operacion_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getValorBooleanoParserRuleCall_6()); 
    }
    this_ValorBooleano_6=ruleValorBooleano
    { 
        $current = $this_ValorBooleano_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValorAccess().getCaracterParserRuleCall_7()); 
    }
    this_Caracter_7=ruleCaracter
    { 
        $current = $this_Caracter_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInicio
entryRuleInicio returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInicioRule()); }
	 iv_ruleInicio=ruleInicio 
	 { $current=$iv_ruleInicio.current; } 
	 EOF 
;

// Rule Inicio
ruleInicio returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInicioAccess().getInicioAction_0(),
            $current);
    }
)	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInicioAccess().getVarKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getDeclaracionvariableDeclaracionVariableParserRuleCall_2_0_0()); 
	    }
		lv_declaracionvariable_2_0=ruleDeclaracionVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"declaracionvariable",
        		lv_declaracionvariable_2_0, 
        		"DeclaracionVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getDeclaracionvariableDeclaracionVariableParserRuleCall_2_1_0()); 
	    }
		lv_declaracionvariable_3_0=ruleDeclaracionVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"declaracionvariable",
        		lv_declaracionvariable_3_0, 
        		"DeclaracionVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_4='inicio' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInicioAccess().getInicioKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getTieneSentenciasParserRuleCall_4_0_0()); 
	    }
		lv_tiene_5_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"tiene",
        		lv_tiene_5_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInicioAccess().getTieneSentenciasParserRuleCall_4_1_0()); 
	    }
		lv_tiene_6_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInicioRule());
	        }
       		add(
       			$current, 
       			"tiene",
        		lv_tiene_6_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_7='fin_inicio' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInicioAccess().getFin_inicioKeyword_5());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleDeclaracionVariable
entryRuleDeclaracionVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaracionVariableRule()); }
	 iv_ruleDeclaracionVariable=ruleDeclaracionVariable 
	 { $current=$iv_ruleDeclaracionVariable.current; } 
	 EOF 
;

// Rule DeclaracionVariable
ruleDeclaracionVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getTipoTipoVariableParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclaracionVariableAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getTieneIDsVariableParserRuleCall_2_0()); 
	    }
		lv_tieneIDs_2_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		add(
       			$current, 
       			"tieneIDs",
        		lv_tieneIDs_2_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclaracionVariableAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclaracionVariableAccess().getTieneIDsVariableParserRuleCall_3_1_0()); 
	    }
		lv_tieneIDs_4_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclaracionVariableRule());
	        }
       		add(
       			$current, 
       			"tieneIDs",
        		lv_tieneIDs_4_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleLlamadaFuncion
entryRuleLlamadaFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLlamadaFuncionRule()); }
	 iv_ruleLlamadaFuncion=ruleLlamadaFuncion 
	 { $current=$iv_ruleLlamadaFuncion.current; } 
	 EOF 
;

// Rule LlamadaFuncion
ruleLlamadaFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLlamadaFuncionAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLlamadaFuncionRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLlamadaFuncionAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLlamadaFuncionAccess().getOperadorOperadorParserRuleCall_2_0_0()); 
	    }
		lv_operador_2_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLlamadaFuncionRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLlamadaFuncionAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLlamadaFuncionAccess().getOperadorOperadorParserRuleCall_2_1_1_0()); 
	    }
		lv_operador_4_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLlamadaFuncionRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_4_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLlamadaFuncionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAsignacion
entryRuleAsignacion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAsignacionRule()); }
	 iv_ruleAsignacion=ruleAsignacion 
	 { $current=$iv_ruleAsignacion.current; } 
	 EOF 
;

// Rule Asignacion
ruleAsignacion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionAccess().getLvalueEStringParserRuleCall_0_0()); 
	    }
		lv_lvalue_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionRule());
	        }
       		set(
       			$current, 
       			"lvalue",
        		lv_lvalue_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Mat_1_0=RULE_MATRIZ
		{
			newLeafNode(lv_Mat_1_0, grammarAccess.getAsignacionAccess().getMatMATRIZTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAsignacionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"Mat",
        		lv_Mat_1_0, 
        		"MATRIZ");
	    }

)
)*	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAsignacionAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAsignacionAccess().getOperadorValorParserRuleCall_3_0()); 
	    }
		lv_operador_3_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAsignacionRule());
	        }
       		set(
       			$current, 
       			"operador",
        		lv_operador_3_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEscribir
entryRuleEscribir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEscribirRule()); }
	 iv_ruleEscribir=ruleEscribir 
	 { $current=$iv_ruleEscribir.current; } 
	 EOF 
;

// Rule Escribir
ruleEscribir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='escribir' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEscribirAccess().getEscribirKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEscribirAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEscribirAccess().getOperadorOperadorParserRuleCall_2_0()); 
	    }
		lv_operador_2_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEscribirRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_2_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEscribirAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEscribirAccess().getOperadorOperadorParserRuleCall_3_1_0()); 
	    }
		lv_operador_4_0=ruleOperador		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEscribirRule());
	        }
       		add(
       			$current, 
       			"operador",
        		lv_operador_4_0, 
        		"Operador");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEscribirAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLeer
entryRuleLeer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLeerRule()); }
	 iv_ruleLeer=ruleLeer 
	 { $current=$iv_ruleLeer.current; } 
	 EOF 
;

// Rule Leer
ruleLeer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='leer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLeerAccess().getLeerKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLeerAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLeerAccess().getVariableVariableIDParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=ruleVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLeerRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"VariableID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLeerAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleSi
entryRuleSi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiRule()); }
	 iv_ruleSi=ruleSi 
	 { $current=$iv_ruleSi.current; } 
	 EOF 
;

// Rule Si
ruleSi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='si' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiAccess().getSiKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getValorValorParserRuleCall_1_0()); 
	    }
		lv_valor_1_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_1_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='entonces' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSiAccess().getEntoncesKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSentenciasSentenciasParserRuleCall_3_0_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSentenciasSentenciasParserRuleCall_3_1_0()); 
	    }
		lv_sentencias_4_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_4_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSiAccess().getSinoSinoParserRuleCall_4_0()); 
	    }
		lv_sino_5_0=ruleSino		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSiRule());
	        }
       		set(
       			$current, 
       			"sino",
        		lv_sino_5_0, 
        		"Sino");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6='fin si' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSiAccess().getFinSiKeyword_5());
    }
)
;





// Entry rule entryRulemientras
entryRulemientras returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMientrasRule()); }
	 iv_rulemientras=rulemientras 
	 { $current=$iv_rulemientras.current; } 
	 EOF 
;

// Rule mientras
rulemientras returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mientras' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMientrasAccess().getMientrasKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getValorValorParserRuleCall_1_0()); 
	    }
		lv_valor_1_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_1_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='hacer' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMientrasAccess().getHacerKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getSentenciasSentenciasParserRuleCall_3_0_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMientrasAccess().getSentenciasSentenciasParserRuleCall_3_1_0()); 
	    }
		lv_sentencias_4_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMientrasRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_4_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_5='fin_mientras' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMientrasAccess().getFin_mientrasKeyword_4());
    }
)
;





// Entry rule entryRulerepetir
entryRulerepetir returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepetirRule()); }
	 iv_rulerepetir=rulerepetir 
	 { $current=$iv_rulerepetir.current; } 
	 EOF 
;

// Rule repetir
rulerepetir returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='repetir' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRepetirAccess().getRepetirKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getSentenciasSentenciasParserRuleCall_1_0_0()); 
	    }
		lv_sentencias_1_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_1_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getSentenciasSentenciasParserRuleCall_1_1_0()); 
	    }
		lv_sentencias_2_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_2_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_3='hasta_que' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRepetirAccess().getHasta_queKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetirAccess().getValorValorParserRuleCall_3_0()); 
	    }
		lv_valor_4_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetirRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_4_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledesde
entryRuledesde returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesdeRule()); }
	 iv_ruledesde=ruledesde 
	 { $current=$iv_ruledesde.current; } 
	 EOF 
;

// Rule desde
ruledesde returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='desde' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDesdeAccess().getDesdeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getAsignacionAsignacionParserRuleCall_1_0()); 
	    }
		lv_asignacion_1_0=ruleAsignacion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		set(
       			$current, 
       			"asignacion",
        		lv_asignacion_1_0, 
        		"Asignacion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='hasta' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDesdeAccess().getHastaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getValorValorParserRuleCall_3_0()); 
	    }
		lv_valor_3_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_3_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='hacer' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDesdeAccess().getHacerKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getSentenciasSentenciasParserRuleCall_5_0_0()); 
	    }
		lv_sentencias_5_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_5_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesdeAccess().getSentenciasSentenciasParserRuleCall_5_1_0()); 
	    }
		lv_sentencias_6_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesdeRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_6_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_7='fin_desde' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDesdeAccess().getFin_desdeKeyword_6());
    }
)
;





// Entry rule entryRuleincremento
entryRuleincremento returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncrementoRule()); }
	 iv_ruleincremento=ruleincremento 
	 { $current=$iv_ruleincremento.current; } 
	 EOF 
;

// Rule incremento
ruleincremento returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIncrementoAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncrementoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIncrementoAccess().getSsignoIncParserRuleCall_1_0()); 
	    }
		lv_ssigno_1_0=ruleinc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncrementoRule());
	        }
       		set(
       			$current, 
       			"ssigno",
        		lv_ssigno_1_0, 
        		"inc");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTipoVariable
entryRuleTipoVariable returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoVariableRule()); } 
	 iv_ruleTipoVariable=ruleTipoVariable 
	 { $current=$iv_ruleTipoVariable.current.getText(); }  
	 EOF 
;

// Rule TipoVariable
ruleTipoVariable returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='entero' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getEnteroKeyword_0()); 
    }

    |
	kw='caracter' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getCaracterKeyword_1()); 
    }

    |
	kw='real' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getRealKeyword_2()); 
    }

    |
	kw='logico' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getLogicoKeyword_3()); 
    }

    |
	kw='cadena' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoVariableAccess().getCadenaKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Mat_1_0=RULE_MATRIZ
		{
			newLeafNode(lv_Mat_1_0, grammarAccess.getVariableAccess().getMatMATRIZTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"Mat",
        		lv_Mat_1_0, 
        		"MATRIZ");
	    }

)
)*)
;





// Entry rule entryRuleVariableID
entryRuleVariableID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableIDRule()); }
	 iv_ruleVariableID=ruleVariableID 
	 { $current=$iv_ruleVariableID.current; } 
	 EOF 
;

// Rule VariableID
ruleVariableID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableIDAccess().getNombreEStringParserRuleCall_0_0()); 
	    }
		lv_nombre_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableIDRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Mat_1_0=RULE_MATRIZ
		{
			newLeafNode(lv_Mat_1_0, grammarAccess.getVariableIDAccess().getMatMATRIZTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableIDRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"Mat",
        		lv_Mat_1_0, 
        		"MATRIZ");
	    }

)
)*)
;





// Entry rule entryRuleConstCadena
entryRuleConstCadena returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstCadenaRule()); }
	 iv_ruleConstCadena=ruleConstCadena 
	 { $current=$iv_ruleConstCadena.current; } 
	 EOF 
;

// Rule ConstCadena
ruleConstCadena returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_contenido_0_0=RULE_CAD
		{
			newLeafNode(lv_contenido_0_0, grammarAccess.getConstCadenaAccess().getContenidoCADTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstCadenaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"contenido",
        		lv_contenido_0_0, 
        		"CAD");
	    }

)
)
;





// Entry rule entryRuleNumeroEntero
entryRuleNumeroEntero returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumeroEnteroRule()); }
	 iv_ruleNumeroEntero=ruleNumeroEntero 
	 { $current=$iv_ruleNumeroEntero.current; } 
	 EOF 
;

// Rule NumeroEntero
ruleNumeroEntero returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumeroEnteroAccess().getValorEIntParserRuleCall_0()); 
	    }
		lv_valor_0_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumeroEnteroRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_0_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleNumeroDecimal
entryRuleNumeroDecimal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumeroDecimalRule()); }
	 iv_ruleNumeroDecimal=ruleNumeroDecimal 
	 { $current=$iv_ruleNumeroDecimal.current; } 
	 EOF 
;

// Rule NumeroDecimal
ruleNumeroDecimal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumeroDecimalAccess().getValorEFloatParserRuleCall_0()); 
	    }
		lv_valor_0_0=ruleEFloat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumeroDecimalRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_0_0, 
        		"EFloat");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleValorBooleano
entryRuleValorBooleano returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValorBooleanoRule()); }
	 iv_ruleValorBooleano=ruleValorBooleano 
	 { $current=$iv_ruleValorBooleano.current; } 
	 EOF 
;

// Rule ValorBooleano
ruleValorBooleano returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getValorBooleanoAccess().getValorBooleanoParserRuleCall_0()); 
	    }
		lv_valor_0_0=rulebooleano		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValorBooleanoRule());
	        }
       		set(
       			$current, 
       			"valor",
        		lv_valor_0_0, 
        		"booleano");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEFloatRule()); } 
	 iv_ruleEFloat=ruleEFloat 
	 { $current=$iv_ruleEFloat.current.getText(); }  
	 EOF 
;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); 
    }
)(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); 
    }
)?)
    ;





// Entry rule entryRulebooleano
entryRulebooleano returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanoRule()); } 
	 iv_rulebooleano=rulebooleano 
	 { $current=$iv_rulebooleano.current.getText(); }  
	 EOF 
;

// Rule booleano
rulebooleano returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='verdadero' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanoAccess().getVerdaderoKeyword_0()); 
    }

    |
	kw='falso' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanoAccess().getFalsoKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleoperacion
entryRuleoperacion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperacionRule()); }
	 iv_ruleoperacion=ruleoperacion 
	 { $current=$iv_ruleoperacion.current; } 
	 EOF 
;

// Rule operacion
ruleoperacion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperacionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperacionAccess().getOp_izqOperando_izqParserRuleCall_1_0()); 
	    }
		lv_op_izq_1_0=ruleoperando_izq		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperacionRule());
	        }
       		set(
       			$current, 
       			"op_izq",
        		lv_op_izq_1_0, 
        		"operando_izq");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperacionAccess().getSigno_opSignoParserRuleCall_2_0()); 
	    }
		lv_signo_op_2_0=rulesigno		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperacionRule());
	        }
       		set(
       			$current, 
       			"signo_op",
        		lv_signo_op_2_0, 
        		"signo");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperacionAccess().getOp_derOperando_derParserRuleCall_3_0()); 
	    }
		lv_op_der_3_0=ruleoperando_der		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperacionRule());
	        }
       		set(
       			$current, 
       			"op_der",
        		lv_op_der_3_0, 
        		"operando_der");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperacionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRulesigno
entryRulesigno returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignoRule()); } 
	 iv_rulesigno=rulesigno 
	 { $current=$iv_rulesigno.current.getText(); }  
	 EOF 
;

// Rule signo
rulesigno returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getAsteriskKeyword_2()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getSolidusKeyword_3()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getLessThanSignKeyword_4()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getGreaterThanSignKeyword_5()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getGreaterThanSignEqualsSignKeyword_6()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getLessThanSignEqualsSignKeyword_7()); 
    }

    |
	kw='y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getYKeyword_8()); 
    }

    |
	kw='o' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getOKeyword_9()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getEqualsSignEqualsSignKeyword_10()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignoAccess().getExclamationMarkEqualsSignKeyword_11()); 
    }
)
    ;





// Entry rule entryRuleoperando_izq
entryRuleoperando_izq returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperando_izqRule()); }
	 iv_ruleoperando_izq=ruleoperando_izq 
	 { $current=$iv_ruleoperando_izq.current; } 
	 EOF 
;

// Rule operando_izq
ruleoperando_izq returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperando_izqAccess().getOper_izqValorParserRuleCall_0()); 
	    }
		lv_oper_izq_0_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperando_izqRule());
	        }
       		set(
       			$current, 
       			"oper_izq",
        		lv_oper_izq_0_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleoperando_der
entryRuleoperando_der returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperando_derRule()); }
	 iv_ruleoperando_der=ruleoperando_der 
	 { $current=$iv_ruleoperando_der.current; } 
	 EOF 
;

// Rule operando_der
ruleoperando_der returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperando_derAccess().getOper_derValorParserRuleCall_0()); 
	    }
		lv_oper_der_0_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperando_derRule());
	        }
       		set(
       			$current, 
       			"oper_der",
        		lv_oper_der_0_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSino
entryRuleSino returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSinoRule()); }
	 iv_ruleSino=ruleSino 
	 { $current=$iv_ruleSino.current; } 
	 EOF 
;

// Rule Sino
ruleSino returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSinoAccess().getSinoAction_0(),
            $current);
    }
)	otherlv_1='sino' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSinoAccess().getSinoKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getSentenciasSentenciasParserRuleCall_2_0_0()); 
	    }
		lv_sentencias_2_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_2_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSinoAccess().getSentenciasSentenciasParserRuleCall_2_1_0()); 
	    }
		lv_sentencias_3_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSinoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_3_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;





// Entry rule entryRuleinc
entryRuleinc returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncRule()); } 
	 iv_ruleinc=ruleinc 
	 { $current=$iv_ruleinc.current.getText(); }  
	 EOF 
;

// Rule inc
ruleinc returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncAccess().getPlusSignPlusSignKeyword_0()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncAccess().getHyphenMinusHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleParametroFuncion
entryRuleParametroFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParametroFuncionRule()); }
	 iv_ruleParametroFuncion=ruleParametroFuncion 
	 { $current=$iv_ruleParametroFuncion.current; } 
	 EOF 
;

// Rule ParametroFuncion
ruleParametroFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getPasoTipoPasoParserRuleCall_0_0()); 
	    }
		lv_paso_0_0=ruleTipoPaso		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"paso",
        		lv_paso_0_0, 
        		"TipoPaso");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getTipoTipoVariableParserRuleCall_1_0()); 
	    }
		lv_tipo_1_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_1_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParametroFuncionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParametroFuncionAccess().getVariableVariableParserRuleCall_3_0()); 
	    }
		lv_variable_3_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametroFuncionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_3_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFuncion
entryRuleFuncion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncionRule()); }
	 iv_ruleFuncion=ruleFuncion 
	 { $current=$iv_ruleFuncion.current; } 
	 EOF 
;

// Rule Funcion
ruleFuncion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getTipoTipoVariableParserRuleCall_0_0()); 
	    }
		lv_tipo_0_0=ruleTipoVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"tipo",
        		lv_tipo_0_0, 
        		"TipoVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='funcion' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuncionAccess().getFuncionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getNombreEStringParserRuleCall_2_0()); 
	    }
		lv_nombre_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuncionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getParametrofuncionParametroFuncionParserRuleCall_4_0_0()); 
	    }
		lv_parametrofuncion_4_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_4_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuncionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getParametrofuncionParametroFuncionParserRuleCall_4_1_1_0()); 
	    }
		lv_parametrofuncion_6_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_6_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuncionAccess().getRightParenthesisKeyword_5());
    }
	otherlv_8='var' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFuncionAccess().getVarKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDeclaracionvariableDeclaracionVariableParserRuleCall_7_0_0()); 
	    }
		lv_declaracionvariable_9_0=ruleDeclaracionVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"declaracionvariable",
        		lv_declaracionvariable_9_0, 
        		"DeclaracionVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDeclaracionvariableDeclaracionVariableParserRuleCall_7_1_0()); 
	    }
		lv_declaracionvariable_10_0=ruleDeclaracionVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"declaracionvariable",
        		lv_declaracionvariable_10_0, 
        		"DeclaracionVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_11='inicio' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFuncionAccess().getInicioKeyword_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getSentenciasSentenciasParserRuleCall_9_0_0()); 
	    }
		lv_sentencias_12_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_12_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getSentenciasSentenciasParserRuleCall_9_1_0()); 
	    }
		lv_sentencias_13_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_13_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_14='devolver' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getFuncionAccess().getDevolverKeyword_10());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFuncionAccess().getLeftParenthesisKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncionAccess().getDevuelveValorParserRuleCall_12_0()); 
	    }
		lv_devuelve_16_0=rulevalor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncionRule());
	        }
       		set(
       			$current, 
       			"devuelve",
        		lv_devuelve_16_0, 
        		"valor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFuncionAccess().getRightParenthesisKeyword_13());
    }
	otherlv_18='fin_funcion' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFuncionAccess().getFin_funcionKeyword_14());
    }
)
;





// Entry rule entryRuleProcedimiento
entryRuleProcedimiento returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedimientoRule()); }
	 iv_ruleProcedimiento=ruleProcedimiento 
	 { $current=$iv_ruleProcedimiento.current; } 
	 EOF 
;

// Rule Procedimiento
ruleProcedimiento returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='procedimiento' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcedimientoAccess().getProcedimientoKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getNombreEStringParserRuleCall_1_0()); 
	    }
		lv_nombre_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		set(
       			$current, 
       			"nombre",
        		lv_nombre_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcedimientoAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getParametrofuncionParametroFuncionParserRuleCall_3_0_0()); 
	    }
		lv_parametrofuncion_3_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_3_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcedimientoAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getParametrofuncionParametroFuncionParserRuleCall_3_1_1_0()); 
	    }
		lv_parametrofuncion_5_0=ruleParametroFuncion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"parametrofuncion",
        		lv_parametrofuncion_5_0, 
        		"ParametroFuncion");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcedimientoAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='var' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProcedimientoAccess().getVarKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getDeclaracionvariableDeclaracionVariableParserRuleCall_6_0_0()); 
	    }
		lv_declaracionvariable_8_0=ruleDeclaracionVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"declaracionvariable",
        		lv_declaracionvariable_8_0, 
        		"DeclaracionVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getDeclaracionvariableDeclaracionVariableParserRuleCall_6_1_0()); 
	    }
		lv_declaracionvariable_9_0=ruleDeclaracionVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"declaracionvariable",
        		lv_declaracionvariable_9_0, 
        		"DeclaracionVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_10='inicio' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getProcedimientoAccess().getInicioKeyword_7());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getSentenciasSentenciasParserRuleCall_8_0_0()); 
	    }
		lv_sentencias_11_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_11_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedimientoAccess().getSentenciasSentenciasParserRuleCall_8_1_0()); 
	    }
		lv_sentencias_12_0=ruleSentencias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedimientoRule());
	        }
       		add(
       			$current, 
       			"sentencias",
        		lv_sentencias_12_0, 
        		"Sentencias");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_13='fin_procedimiento' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getProcedimientoAccess().getFin_procedimientoKeyword_9());
    }
)
;





// Entry rule entryRuleTipoPaso
entryRuleTipoPaso returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTipoPasoRule()); } 
	 iv_ruleTipoPaso=ruleTipoPaso 
	 { $current=$iv_ruleTipoPaso.current.getText(); }  
	 EOF 
;

// Rule TipoPaso
ruleTipoPaso returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getEKeyword_0()); 
    }

    |
	kw='E/S' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getESKeyword_1()); 
    }

    |
	kw='S' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTipoPasoAccess().getSKeyword_2()); 
    }
)
    ;





RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_CAD : '"' ('a'..'z'|'A'..'Z'|'_'|' '|'!'|'#'|'@'|'%'|'&'|'('|')'|'='|'?'|'\\'|'0'..'9')* '"';

RULE_CAR : '\'' ('a'..'z'|'A'..'Z'|'_'|' '|'!'|'#'|'@'|'%'|'&'|'('|')'|'='|'?'|'\\'|'0'..'9') '\'';

RULE_MATRIZ : '[' ('a'..'z'|'A'..'Z'|'0'..'9')* ('--'|'++')? ']';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


